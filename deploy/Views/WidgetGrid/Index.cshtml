@using SqlHealthMonitor.DAL.Models.Widgets
@model SqlHealthMonitor.BLL.Models.WebPages.WidgetGridPageViewModel
@Styles.Render("~/Content/jtable/css")
@Scripts.Render("~/bundles/jtable")


<div id="WidgetContainer"></div>
@section NavBar{
    @Html.Partial("SettingsNavBar")


}
<script>
    $(document).ready(function () {

        (function (sqlHealthMonitor, $, undefined) {
            $('#WidgetContainer').jtable({

                jqueryuiTheme: true,
                title: '@Resources.Global.TableofWidgets',
                actions: {
                    listAction: '@Url.Action("Read", Model.ControllerName)',
                    createAction: '@Url.Action("Create", Model.ControllerName)',
                    updateAction: '@Url.Action("Update", Model.ControllerName)',
                    deleteAction: '@Url.Action("Delete", Model.ControllerName)',
                },
                fields: {
                    WidgetId: {
                        key: true,
                        list: false
                    },
                    Name: {
                        title: 'Name',

                    },
                    Setting: {
                        title: ' Setting',
                        create: false,
                        edit : false,

                        display: function (data) {
                            if (data.record.Type == @((int)WidgetType.CpuWidget))
                                return "<a href=@Url.Action("Settings", "CpuWidget",new { id = UrlParameter.Optional })/" + data.record.WidgetId + ">@Resources.Global.Settings</a></a>";
                             if (data.record.Type == @((int)WidgetType.DatabasesSizeWidget))
                                return "<a href=@Url.Action("Settings", "DatabasesSizeWidget", new { id = UrlParameter.Optional })/" + data.record.WidgetId + ">@Resources.Global.Settings</a></a>";
                              @*if (data.record.Type == @((int)WidgetType.JobsWidget))
                                return   "<a href=@Url.Action("JobsSettingUpdate", Model.ControllerName,new { id = UrlParameter.Optional })/" + data.record.WidgetId + ">@Resources.Global.Settings</a></a>";*@
                             //return '<input type="text" name="Name" style="width:200px" value="' + data.record.Name + '" />';
                        }
                    },
                    Type: {
                        title: 'Type',

                        options:
                         @Html.Raw(Json.Encode(EnumHelper.GetSelectList(
                    typeof(WidgetType)).Select(x => new { DisplayText = x.Text, Value = x.Value }))),
                    },
                    SqlServerDataId: {
                        title: 'Sql Server',

                        options:
                         @Html.Raw(Json.Encode(Model.SqlServers.Select(x => new { DisplayText = x.Name, Value = x.SqlServerDataId }))),
                    },
                    UpdateInterval: {
                        title: 'UpdateInterval',
                        defaultValue : 10

                    },
                    Width: {
                        title: 'Width',
                        defaultValue: 400

                    },
                    Height: {
                        title: 'Height',
                        defaultValue: 400

                    },
                }
            });

            $.hik.jtable.prototype._showError = function (message) {
              sqlHealthMonitor.showErrorDialog(message);
            };
            $('#WidgetContainer').jtable('load');
        }(window.sqlHealthMonitor = window.sqlHealthMonitor || {}, jQuery));
    });

</script>