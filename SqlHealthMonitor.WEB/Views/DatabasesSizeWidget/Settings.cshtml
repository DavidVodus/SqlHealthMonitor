
@model SqlHealthMonitor.BLL.Models.WebPages.DatabasesSizeSettingsPageViewModel

@Styles.Render("~/Content/jtable/css")
@Scripts.Render("~/bundles/jtable")

@using (Html.BeginForm("Settings", Model.ControllerName, FormMethod.Post, new { @class = "form-horizontal", role = "form",id = "databasesSizeSettingsForm"  }))
{
    @Html.AntiForgeryToken()
    <h4>@Resources.Global.Edit</h4>
    <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            <h4>"Databases to show for the Database Widget"</h4>
            <div id="SqlDatabases"></div>
            @*<div class="form-group">
                @Html.LabelFor(m => m.Widget.DatabaseIds, new { @class = "col-md-2 control-label" })
                <div class="col-md-12">
                    @Html.TextBoxFor(m => m.Widget.NumberOfRecords, new { @class = "form-control" })
                </div>
            </div>*@
            <div class="col-md-12">
                @*@Html.DropDownListFor(id => id.CpuWidget.SqlServerDataId,
          new SelectList(this.Model.SqlServers.Select(x => new SelectListItem { Text = x.Name, Value = x.SqlServerDataId.ToString(), Selected = x.SqlServerDataId == Model.CpuWidget.SqlServerDataId ? true : false }), "Value", "Text"))*@

            </div>
        </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.HiddenFor(id => id.Widget.WidgetId)
                        @Html.HiddenFor(id => id.Widget.Name)
                        @Html.HiddenFor(id => id.Widget.UpdateInterval)
                        @Html.HiddenFor(id => id.Widget.SqlServerDataId)
                        @Html.HiddenFor(id => id.Widget.Type)
                        @Html.HiddenFor(id => id.Widget.Width)
                        @Html.HiddenFor(id => id.Widget.Height)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12">
                        <input id="sendForm_but" type="submit" class="btn btn-default" value=@Resources.Global.Save />
                    </div>
                </div>
}
@section NavBar{
<ol class="breadcrumb">
    <li class="breadcrumb-item ">
        @Html.ActionLink(@Resources.Global.Home, "Index", "Home")

    </li>
    <li class="breadcrumb-item ">
        @Html.ActionLink("SqlDashBoard", "Index", "SqlDashBoard")

    </li>
    <li class="breadcrumb-item">
        @Resources.Global.Settings
    </li>
    <li class="breadcrumb-item">
        @Html.ActionLink(@Resources.Global.WidgetGrid, "Index", "WidgetGrid")
    </li>
    <li class="breadcrumb-item active">
        @Resources.Global.Edit
    </li>
</ol>

    }


<script>
    $(document).ready(function () {
        (function (sqlHealthMonitor, $, undefined) {
            $("#sendForm_but").button()
                .click(function (event) {
                    var selectedRows = $('#SqlDatabases').jtable('selectedRows');
                    selectedRows.each(function (i) {
                        var record = $(this).data('record');
                        var input = $("<input type='hidden' name='Widget.DatabaseIds[" + i + "]' value='" + record.DatabaseId + "' />");
                        $('#databasesSizeSettingsForm').append(input);
                    });

                });
            $('#SqlDatabases').jtable({

                jqueryuiTheme: true,
                title: 'Table of Sql Databases',
                selecting: true, //Enable selecting
                multiselect: true, //Allow multiple selecting
                selectingCheckboxes: true, //Show checkboxes on first column
                actions: {
                    listAction: '@Html.Raw(@Url.Action("Read","DatabasesSizeWidget",
                                new { SqlServerDataId=Model.Widget.SqlServerDataId, DatabaseIds= new List <int>() }))',
                },
                fields: {
                    DatabaseId: {
                        title: 'Database Id',

                    },
                    DatabaseName: {
                        title: 'Database Name'
                    },
                    Type: {
                        title: 'Type',

                    }

                },
                rowInserted: function (event, data) {
                    if ($.inArray(data.record.DatabaseId, @Html.Raw(Json.Encode(@Model.Widget.DatabaseIds))) != -1) {
                        $('#SqlDatabases').jtable('selectRows', data.row);
                    };
                }
            });

            $.hik.jtable.prototype._showError = function (message) {
                sqlHealthMonitor.showErrorDialog(message);
            };
            $('#SqlDatabases').jtable('load');
        }(window.sqlHealthMonitor = window.sqlHealthMonitor || {}, jQuery));
    });

</script>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}


