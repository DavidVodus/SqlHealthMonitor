<style>
    #sortable {
        list-style-type: none;
        margin: 0;
        padding: 0;
        width: 450px;
    }

        #sortable li {
            margin: 3px 3px 3px 0;
            padding: 1px;
            float: left;
            width: 400px;
            height: 400px;
            font-size: 4em;
            text-align: center;
        }
</style>

<canvas id="myChart" width="400" height="400"></canvas>
<script>
    this._seed = 6;
    function random(min, max) {
        var seed = this._seed;
        min = min === undefined ? 0 : min;
        max = max === undefined ? 1 : max;
        this._seed = (seed * 9301 + 49297) % 233280;
        return Math.round(min + (this._seed / 233280) * (max - min));
    }

    var ctx = document.getElementById("myChart");

   var plotik= new Chart(ctx, {
        type: 'line',
        data: {
      
            datasets: [{
                label: 'Sql load',
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],

                fill:false,
            },
                {
                    label: 'Others processes',
                    backgroundColor: [
                        'rgba(255, 20, 20, 0.2)'
   
                    ],
                    borderColor: [
                        'rgba(255,255,0,0.3)'
                    ],

                    fill: false,
                }]
        },
        options: {
            animation: {
                duration: 0, // general animation time
            },
            hover: {
                animationDuration: 0, // duration of animations when hovering an item
            },
            responsiveAnimationDuration: 0, // anim
            responsive: true,
            title: {
                display: true,
                text: 'Chart.js Line Chart'
            },
            tooltips: {
                mode: 'index',
                intersect: false,
            },
            hover: {
                mode: 'nearest',
                intersect: true
            },
            scales: {
                xAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Time'
                    }
                }],
                yAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Value'
                    },
                    ticks: {
                        min: 0,
                        max: 100,
                        stepSize: 10
                    }
                }]
            }
        }
    });

    setInterval(function () {
        if (plotik.data.labels.length == 6)
            removeData(plotik);
        var data = GetData();
        //var currentdate = new Date();
        //data.TimeStamp = currentdate.getHours() + ":"+currentdate.getMinutes();
        addData(plotik, data);
  
    }, 30000);
    function addData(chart, data) {
        data.forEach((data) => {
            chart.data.datasets[0].data.push(data.SqlServer);
            chart.data.datasets[1].data.push(data.Others);
            chart.data.labels.push(data.EventTimeText);
        });
      
       
        chart.update();
    }

    function removeData(chart) {
        //chart.data.labels.shift();
        //chart.data.datasets.forEach((dataset) => {
        //    dataset.data.shift();
        //});
        chart.data.labels = [];
          chart.data.datasets.forEach((dataset) => {
              dataset.data = [];
        });
        chart.update();
    }
    function GetData()
    {
        var data = "";
        $.ajax({
            type: "POST",
            url: "@Url.Action("CpuLoad", Model.ControllerName)",
            async:false,
            success: function (response) {
                data=response;
            },
            error: function () {
                popupNotification.show(UserPreference.prototype.messages.preferenceNotSaved + " Ajax error", "error");
            }
        });
            return data;
    }
</script>
