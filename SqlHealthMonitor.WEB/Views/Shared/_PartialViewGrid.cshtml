
@*styles which make items(bootstraps panels) of grid smaller*@

@using MvcNetworkCenter.DAL.Models.WebPages
@model MvcNetworkCenter.BLL.Models.WebPages.GridPageViewModel
<script type="text/x-kendo-template" id="template">
    <div class="toolbar" style="z-index:20">
        <div class="panel panel-warning toolbar-element">
            <div class="panel-heading">
                <div id="isCached_Div" class=""></div>
            </div>
            <div class="panel-body">
                <a class="k-button k-button-icontext k-grid-excel toolbar-element" href="" style="float:left;clear:both"><span class="k-icon k-i-excel"></span>@Html.Raw(Resources.Global.ExporttoExcel)</a>
                <div style="display: inline-block;float:left" class="toolbar-element">
                    <select id="gridColumnViewState_Multiselect" multiple style="width:250px"></select>
                </div>
                <div style="display: inline-block;float:left" class="toolbar-element ">
                    <input id="gridViewType_DropDownList" />
                </div>
                <button type="button" id="gridCachedResults_Button" style="float:left;" class="toolbar-element">@Html.Raw(Resources.Global.CachedResults)</button>
                <button type="button" id="savePreference_Button" style="float:left;" class="toolbar-element">@Html.Raw(Resources.Global.SavePreferences)</button>
                <button type="button" id="cancelQueryGrid_Button" style="float:left" class="toolbar-element">@Html.Raw(Resources.Global.CancelrunningGridquery)</button>
                <button type="button" id="execQueryGrid_Button" style="float:left" class="toolbar-element">@Html.Raw(Resources.Global.ExecFiltering)</button>
                <div style="display: inline-block;float:left;clear:both;min-width:300px">
                    <select class="toolbar-element" id="gridsFilter_MultiSelect" multiple></select>
                </div>
            </div>
        </div>
    </div>
</script>
    @{
        Html.Kendo().Grid<dynamic>()
            .Name("grid")
            .Columns(columns =>
            {

                Grid.BoundColumns(columns, Model.Columns.OrderBy(x => x.Order).ToList());
            })
            .ClientRowTemplate((x) => x.ClientRowTemplate = Model.GridViewType == GridViewType.ExcellSheet ? "" : "<tr data-uid='#: uid #'>" +
        "<td>" +
        GetHelpers.Html.RowItemsBuilder(Model.Columns) +
        "</td>" +
        "</tr>")
         .ClientAltRowTemplate((x) => x.ClientAltRowTemplate = Model.GridViewType == GridViewType.ExcellSheet ? "" : "<tr data-uid='#: uid #' class='k-alt'>" +
        "<td>" +
        GetHelpers.Html.RowItemsBuilder(Model.Columns) +
        "</td>" +
        "</tr>")
        //.Scrollable(s => s.Height("auto"))
        .Groupable()
        .Sortable()
        .Pageable(pageable => pageable
            .Refresh(false)
            .PageSizes(new[] { 10, 50, 100, 200, 300, 65000 }) //The default page sizes are 5, 10 and 20.)
            .ButtonCount(20))
        .Reorderable(c => c.Columns(true))
        .Resizable(c => c.Columns(true))
        .AutoBind(false)
        .Filterable(filtering => filtering.Enabled(true)
        // .Filterable(ftb => ftb.Mode(GridFilterMode.Menu)
        )

        //.ClientDetailTemplateId("template")
        // .HtmlAttributes(new { style = "height:800px;" })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(100)
            .Model(x =>
            {
                foreach (var pageColumn in Model.Columns)
                {
                    x.Field(pageColumn.BindName, pageColumn.DateType.Contains("Byte") ? typeof(string) : Type.GetType(pageColumn.DateType));
                }
            })
            .Read(read => read.Action("GetRecords", Model.ControllerName))
        .ServerOperation(true)
        )
        .Render();
    }
    <script type="text/javascript">
        
        //window.shared_Layout= new function () {


        /**
         *
         * @@param stringifyModel - example>'@@Html.Raw(Json.Encode(Model))'
         * @@param savePreferenceUrl - example>"@@Url.Action("SavePreference", Model.ControllerName)"
         */
        $(document).ready(function () {
            window.shared_PartialViewGrid = new function (stringifyModel, savePreferenceUrl, popupNotification) {
                //(function initialize(stringifyModel, savePreferenceUrl, popupNotification) {
                    var stringifyModel = stringifyModel;
                    //$("#grid").data("kendoGrid").options.toolbar =
                    //    [
                    //        { template: kendo.template($("#template").html()) }
                    //    ];
                    //var options = $("#grid").data("kendoGrid").getOptions();
                    //$("#grid").data("kendoGrid").setOptions(options);
                    this.gridPageViewModel = JSON.parse(stringifyModel);
                    var mainGrid = new gridApp.KendoWrappedGrid("#grid", this.gridPageViewModel, "@Url.Action("IsResultCached", Model.ControllerName)",
                     "@Url.Action("Excel_Export_Save", Model.ControllerName)");
                    mainGrid.setToolbar([
                        { template: kendo.template($("#template").html()) }
                    ]);
                    var gridFiltersMultiselect = new gridApp.GridFiltersMultiselect("#gridsFilter_MultiSelect", null);
                    var isCachedResultPanel = new gridApp.IsResultCachedPanel("#isCached_Div");
                    mainGrid.bindFiltersMultiselect(gridFiltersMultiselect);
                    mainGrid.bindIsResultCachedPanel(isCachedResultPanel);
                    mainGrid.bindPopupNotification(popupNotification);

                    this.gridPanel = new gridApp.GridPanel(
                        mainGrid, this.gridPageViewModel, new gridApp.UserPreference(this.gridPageViewModel, savePreferenceUrl, popupNotification, mainGrid), gridFiltersMultiselect,
                        new gridApp.KendoWrappedButton("#execQueryGrid_Button"),
                        new gridApp.KendoWrappedButton("#cancelQueryGrid_Button"),
                        new gridApp.GridViewTypeDropDownList("#gridViewType_DropDownList",
                            '@Html.Raw(Json.Encode(EnumHelper.GetSelectList(typeof(GridViewType)).ToList()))', this.gridPageViewModel.GridViewType),
                        new gridApp.GridColumnViewStateMultiselect("#gridColumnViewState_Multiselect", this.gridPageViewModel),
                        new gridApp.KendoWrappedButton("#gridCachedResults_Button"),
                        new gridApp.GridCachedResultsWindow("@Url.Action("GetCachedResults", Model.ControllerName)",
                            gridFiltersMultiselect, '@User.Identity.GetUserName()', this.gridPageViewModel, mainGrid, popupNotification),
                        new gridApp.KendoWrappedButton("#savePreference_Button"),
                        isCachedResultPanel);
            }('@Html.Raw(Json.Encode(Model))', "@Url.Action("SavePreference", Model.ControllerName)", shared_Layout.popupNotification)
});



    </script>
