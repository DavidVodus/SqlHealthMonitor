@using SqlHealthMonitor.BLL.Models.WebPages
@using SqlHealthMonitor.BLL.Models.WebPages.Components
@using SqlHealthMonitor.DAL.Models.WebPages
@model SqlHealthMonitor.BLL.Models.WebPages.ManagePreferenceUserViewModel
@{
    Html.Kendo().Grid<GridPageViewModel>()
            .Name("grid")
          .Columns(columns =>
          {
              columns.Bound(x => x.PageId).Hidden(true);
              columns.Bound(x => x.PageName);
              columns.Bound(x => x.ControllerName);
              columns.Bound(x => x.CacheDuration);
              columns.ForeignKey(t => t.GridViewType,
                  EnumHelper.GetSelectList(
                      typeof(GridViewType)).ToList(), "Value", "Text").Title("GridViewType")
                  .Width(200).EditorTemplateName("GridViewTypeEditor");

          })
          //.ToolBar(toolbar =>
          //{
          //    toolbar.Save();
          //})
          .Editable(editable => editable.Mode(GridEditMode.InCell))
            .Sortable()
            .Pageable()
             .Scrollable(s => s.Height("auto"))
            .ClientDetailTemplateId("template")
            .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .PageSize(10)
                .ServerOperation(false)
                .Model(model =>
                {
                    model.Id(p => p.PageId); model.Field(o => o.ControllerName).Editable(false);
                    model.Field(o => o.StartActionName).Editable(false); model.Field(o => o.PageName).Editable(false);
                })
                .Update("UpdateGridPage", "ManagePreferenceUser")
                .Read(read => read.Action("ReadPageProperties", "ManagePreferenceUser",
                new { controllerName = Model.SelectedControllerName, startActionName = Model.SelectedStartActionName }))
            ).Render();
    }
<script id="template" type="text/kendo-tmpl">
   @(Html.Kendo().Grid<GridColumnDefinitionViewModel>()
         .Name("grid_#=PageId#")
         .Columns(columns =>
         {
             columns.Bound(o => o.GridColumnDefinitionId).Hidden(true);
             columns.Bound(o => o.BindName);
             columns.Bound(o => o.DisplayName);
             columns.Bound(o => o.DateTimeDifference).Title(@Resources.Global.DateTimeDifferenceindays);
             columns.Bound(o => o.Hiden);
         })

         .ToolBar(toolbar =>
         {
             toolbar.Save();
         })
         .Editable(editable => editable.Mode(GridEditMode.InCell))
         .DataSource(dataSource => dataSource
             .Ajax()
             .Batch(true)
             .PageSize(10)
             .ServerOperation(false)
             .Model(model => { model.Id(p => p.GridColumnDefinitionId); model.Field(o => o.BindName).Editable(false); model.Field(o => o.DisplayName).Editable(false); })
             .Read(read => read.Action("ReadGridColumns", "ManagePreferenceUser", new { controllerName = Model.SelectedControllerName, startActionName = Model.SelectedStartActionName }))
             .Update("UpdateGridColumns", "ManagePreferenceUser")
         )
         .Scrollable(s => s.Height("auto"))
         .Pageable(pageable => pageable
             .Refresh(true))
         .Sortable()
         .ToClientTemplate())
  
</script>
<script type="text/javascript">
    $(document).ready(function () {
    window.managePreferenceUser_GridPage = new function () {
        var mainGrid = new gridApp.KendoWrappedGrid("#grid", null, null, null);
        mainGrid.bindPopupNotification(window.shared_Layout.popupNotification);
            var u = mainGrid.getcontrol().data;
            mainGrid.setToolbar(["save", "cancel"]);
            mainGrid.setTimeSpanColumnEditor("CacheDuration");
            mainGrid.getcontrol().data.bind("detailInit", initDetailGrid);
            var initDetailGrid = function initDetailGrid(e) {
                var detailGrid = new gridApp.KendoWrappedGrid("#grid_" + e.data.PageId, null, null, null);
                detailGrid.bindPopupNotification(window.shared_Layout.popupNotification);
            }
    }();
    });
</script>
